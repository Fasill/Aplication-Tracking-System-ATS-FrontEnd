{"version":3,"file":"static/js/89.b6a59190.chunk.js","mappings":"wKAoDA,UA/CqB,WACjB,IAAAA,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAOF,EAAA,GAAEG,EAAQH,EAAA,GAClBI,GAAWC,EAAAA,EAAAA,MA0BjB,OAxBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAaC,OAAOC,SAASC,KAM7BC,EAHY,IAAIC,gBAAgBL,GAGdM,IAAI,SAG5BC,EAAAA,EAAMD,IAAI,GAADE,OAAIC,EAAAA,EAAW,yBAAAD,OAAwBJ,IAC3CM,MAAK,SAAAC,GAEFC,aAAaC,QAAQ,QAAST,GAC9BP,EAAS,qBACb,IACCiB,OAAM,SAAAC,GAEHC,QAAQD,MAAM,SAAUA,GACxBnB,GAAS,EACb,GACR,GAAG,CAACC,KAGAoB,EAAAA,EAAAA,KAAA,OAAAC,SACMvB,GAGEwB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gFACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+BACHC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qDACJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,kBAAcD,EAAAA,EAAAA,KAAA,KAAGd,KAAK,IAAGe,SAAC,aAAY,QAC1CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAYD,EAAAA,EAAAA,KAAA,KAAGd,KAAK,WAAUe,SAAC,iBAAgB,6BAT3DD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wCAehC,C,uDCnDO,IAAMX,EAAc,+C","sources":["pages/verificationPage/VerifyClient.js","utils/Links.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { backEndLink } from \"../../utils/Links\";\n\nconst VerifyClient = () => {\n    const [isError, setError] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Get the current URL\n        const currentUrl = window.location.href;\n\n        // Extract the parameters from the URL\n        const urlParams = new URLSearchParams(currentUrl);\n\n        // Get the values of the parameters\n        const token = urlParams.get('token');\n        \n        // Make an API request to verify the user\n        axios.get(`${backEndLink}/client/verify?token=${token}`)\n            .then(response => {\n                // Handle the response from the backend (if needed)\n                localStorage.setItem(\"token\", token);\n                navigate('/client/Candidates');\n            })\n            .catch(error => {\n                // Handle any errors (if needed)\n                console.error('Error:', error);\n                setError(true);\n            });\n    }, [navigate]);\n\n    return (\n        <div >\n            {!isError ? (\n                <span className=\"loading loading-spinner loading-lg\"></span>\n            ) : (\n                <div>\n                    <h1>Oops! Something Went Wrong</h1>\n                    <p>We're sorry, but there seems to be an error with the link you've followed.</p>\n                    <p>Please try the following:</p>\n                    <ul>\n                        <li>Double-check the URL to make sure it's correct.</li>\n                        <li>Return to the <a href=\"/\">homepage</a>.</li>\n                        <li>Contact our <a href=\"/contact\">support team</a> for assistance.</li>\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\nexport default VerifyClient\n","export const backEndLink = 'https://test-back-end-dszgwhplxa-el.a.run.app';\n//export const backEndLink ='http://localhost:8080';\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","isError","setError","navigate","useNavigate","useEffect","currentUrl","window","location","href","token","URLSearchParams","get","axios","concat","backEndLink","then","response","localStorage","setItem","catch","error","console","_jsx","children","_jsxs","className"],"sourceRoot":""}