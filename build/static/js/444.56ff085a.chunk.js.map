{"version":3,"file":"static/js/444.56ff085a.chunk.js","mappings":"kPAIaA,EAAmB,WAC5B,IAAAC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAOF,EAAA,GAAEG,EAAQH,EAAA,GAClBI,GAAWC,EAAAA,EAAAA,MA8BjB,OA5BAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAaC,OAAOC,SAASC,KAG7BC,EAAY,IAAIC,gBAAgBL,GAGhCM,EAAMF,EAAUG,IAAI,OACpBC,EAASJ,EAAUG,IAAI,UACvBE,EAAQL,EAAUG,IAAI,SAG5BG,EAAAA,EAAMH,IAAI,gEAADI,OAAiEL,EAAG,YAAAK,OAAWH,EAAM,WAAAG,OAAUF,IACnGG,MAAK,SAAAC,GAEFC,QAAQC,IAAI,oBAAqBF,EAASG,MAC1C,IAAMC,EAAQJ,EAASG,KAAKC,MAC5BC,aAAaC,QAAQ,QAASF,GAC9BpB,EAAS,QACb,IACCuB,OAAM,SAAAC,GAEHP,QAAQO,MAAM,SAAUA,GACxBzB,GAAS,EACb,GACR,GAAG,CAACC,KAGAyB,EAAAA,EAAAA,KAAA,OAAAC,SACM5B,GAGE6B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gFACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+BACHC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qDACJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,kBAAcD,EAAAA,EAAAA,KAAA,KAAGnB,KAAK,IAAGoB,SAAC,aAAY,QAC1CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAYD,EAAAA,EAAAA,KAAA,KAAGnB,KAAK,WAAUoB,SAAC,iBAAgB,6BAT3DD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wCAehC,EAIaC,EAAiB,WAC1B,IAAAC,GAA4BnC,EAAAA,EAAAA,WAAS,GAAMoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAApChC,EAAOiC,EAAA,GAAEhC,EAAQgC,EAAA,GAClB/B,GAAWC,EAAAA,EAAAA,MA0BjB,OAxBAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAaC,OAAOC,SAASC,KAM7Bc,EAHY,IAAIZ,gBAAgBL,GAGdO,IAAI,SAG5BG,EAAAA,EAAMH,IAAI,kEAADI,OAAmEM,IACvEL,MAAK,SAAAC,GAEFK,aAAaC,QAAQ,QAAQF,GAC7BpB,EAAS,QACb,IACCuB,OAAM,SAAAC,GAEHP,QAAQO,MAAM,SAAUA,GACxBzB,GAAS,EACb,GACR,GAAG,CAACC,KAGAyB,EAAAA,EAAAA,KAAA,OAAAC,SACM5B,GAGE6B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gCACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gFACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+BACHC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qDACJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,kBAAcD,EAAAA,EAAAA,KAAA,KAAGnB,KAAK,IAAGoB,SAAC,aAAY,QAC1CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBAAYD,EAAAA,EAAAA,KAAA,KAAGnB,KAAK,WAAUoB,SAAC,iBAAgB,6BAT3DD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wCAehC,C","sources":["pages/verificationPage/verificationPage.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nexport const VerificationPage = () => {\n    const [isError, setError] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Get the current URL\n        const currentUrl = window.location.href;\n\n        // Extract the parameters from the URL\n        const urlParams = new URLSearchParams(currentUrl);\n\n        // Get the values of the parameters\n        const key = urlParams.get('key');\n        const compId = urlParams.get('compId');\n        const email = urlParams.get('email');\n\n        // Make an API request to verify the user\n        axios.get(`https://test-back-end-dszgwhplxa-el.a.run.app/verifyuser?key=${key}&compId=${compId}&email=${email}`)\n            .then(response => {\n                // Handle the response from the backend (if needed)\n                console.log('Backend response:', response.data);\n                const token = response.data.token;\n                localStorage.setItem(\"token\", token);\n                navigate('/home');\n            })\n            .catch(error => {\n                // Handle any errors (if needed)\n                console.error('Error:', error);\n                setError(true);\n            });\n    }, [navigate]);\n\n    return (\n        <div >\n            {!isError ? (\n                <span className=\"loading loading-spinner loading-lg\"></span>\n            ) : (\n                <div>\n                    <h1>Oops! Something Went Wrong</h1>\n                    <p>We're sorry, but there seems to be an error with the link you've followed.</p>\n                    <p>Please try the following:</p>\n                    <ul>\n                        <li>Double-check the URL to make sure it's correct.</li>\n                        <li>Return to the <a href=\"/\">homepage</a>.</li>\n                        <li>Contact our <a href=\"/contact\">support team</a> for assistance.</li>\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\n\nexport const VerifySupplier = () => {\n    const [isError, setError] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Get the current URL\n        const currentUrl = window.location.href;\n\n        // Extract the parameters from the URL\n        const urlParams = new URLSearchParams(currentUrl);\n\n        // Get the values of the parameters\n        const token = urlParams.get('token');\n\n        // Make an API request to verify the user\n        axios.get(`https://test-back-end-dszgwhplxa-el.a.run.app/verifyLink?token=${token}`)\n            .then(response => {\n                // Handle the response from the backend (if needed)\n                localStorage.setItem('token',token)\n                navigate('/home');\n            })\n            .catch(error => {\n                // Handle any errors (if needed)\n                console.error('Error:', error);\n                setError(true);\n            });\n    }, [navigate]);\n\n    return (\n        <div >\n            {!isError ? (\n                <span className=\"loading loading-spinner loading-lg\"></span>\n            ) : (\n                <div>\n                    <h1>Oops! Something Went Wrong</h1>\n                    <p>We're sorry, but there seems to be an error with the link you've followed.</p>\n                    <p>Please try the following:</p>\n                    <ul>\n                        <li>Double-check the URL to make sure it's correct.</li>\n                        <li>Return to the <a href=\"/\">homepage</a>.</li>\n                        <li>Contact our <a href=\"/contact\">support team</a> for assistance.</li>\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"names":["VerificationPage","_useState","useState","_useState2","_slicedToArray","isError","setError","navigate","useNavigate","useEffect","currentUrl","window","location","href","urlParams","URLSearchParams","key","get","compId","email","axios","concat","then","response","console","log","data","token","localStorage","setItem","catch","error","_jsx","children","_jsxs","className","VerifySupplier","_useState3","_useState4"],"sourceRoot":""}