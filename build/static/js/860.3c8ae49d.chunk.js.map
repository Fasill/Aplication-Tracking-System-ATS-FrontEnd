{"version":3,"file":"static/js/860.3c8ae49d.chunk.js","mappings":"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","sources":["components/Forms/EditProfileForm.js","components/Forms/EditprofileFormForUser.js","pages/profile/profile.js","utils/Links.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAsyncError, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { backEndLink } from '../../utils/Links.js';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nconst EditProfileForm = (props) => {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [isEmpty, setIsEmpty] = useState(false);\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        phoneNumber: '',\n        password:'',\n        address: '',\n        city: '',\n        state: '',\n        country: '',\n    });\n    const [errorMessage, setErrorMessage] = useState('');\n    const [Submit, setSubmit] = useState(true);\n\n    const schema = yup.object().shape({\n        email: yup.string().email('Invalid email format'),\n        address: yup.string(),\n        city: yup.string(),\n        state: yup.string(),\n        country: yup.string(),\n    });\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n    useEffect(() => {\n        const isFormEmpty = Object.values(formData).every((value) => value === '');\n        setIsEmpty(isFormEmpty);\n    }, [formData]);\n   \n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = () => {\n        if (Submit) {\n            setIsSubmitting(true);\n            const token = localStorage.getItem('token')\n            formData.token = token\n            console.log(formData);\n            \n            axios\n            .post(`${backEndLink}/update`, formData)\n            .then((res) => {\n                const token = res.data.token;\n                console.log(res.data);\n                console.log(\"saved1\");\n                setIsSubmitting(false);\n                setSubmit(false);\n                setFormData({   name: '',\n                                email: '',\n                                phoneNumber: '',\n                                password:'',\n                                address: '',\n                                city: '',\n                                state: '',\n                                country: '',\n                            }); // Clear form fields\n                window.location.reload()\n\n\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                    setErrorMessage(error.response.data.message);\n                } else {\n                    setErrorMessage('An error occurred. Please try again.');\n                }\n                setIsSubmitting(false);\n                setSubmit(false);\n\n            });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"grid gap-5 w-[]  \">\n            {/* <button >heol</button> */}\n            <button\n            type='submit'\n            disabled = {isEmpty||isSubmitting} \n            className={`h-[32px] w-[80px] bg-blue-500 flex items-center justify-center rounded-[0.6rem] font-bold text-white justify-self-end ${isEmpty ? 'bg-[rgb(226,232,240)]' : ''}`}\n          >\n            {isSubmitting?<span className=\"loading loading-spinner loading-sm bg-white\"></span>:'save'}\n          </button>\n          <div className=\"text-black   grid justify-items-start\">\n            <label>Navme<span className=\"text-red-600\">{errors.name?.message}</span></label>\n            <input\n            type=\"text\"\n            name=\"name\"\n            placeholder={props.data.name}\n            \n            {...register(\"name\")}\n            value={formData.name}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n\n        <div className=\"text-black grid justify-items-start\">\n            <label>Email ID<span className=\"text-red-600\">{errors.email?.message}</span></label>\n            <input\n            type=\"text\"\n            placeholder={props.data.email}\n            {...register(\"email\")}\n            value={formData.email}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n\n        <div className=\"text-black grid justify-items-start\">\n            <label>Password<span className=\"text-red-600\">{errors.email?.message}</span></label>\n            <input\n            type=\"password\"\n            placeholder={'.........'}\n            {...register(\"password\")}\n            value={formData.password}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n\n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>Phone Number<span className=\"text-red-600\">{errors.phoneNumber?.message}</span></label>\n            <PhoneInput\n            placeholder={props.data.phoneNumber}\n\n            inputStyle={{\n                height: '45px',\n                width: '100%',\n                border: '1px solid #ccc',\n                borderRadius: '5px',\n            }}\n            value={formData.phoneNumber}\n            onChange={(value) => setFormData({ ...formData, phoneNumber: value })}\n            />\n        </div>\n    \n        \n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>Address<span className=\"text-red-600\">{errors.address?.message}</span></label>\n            <input\n            type=\"text\"\n            name=\"address\"\n            placeholder={props.data.address}\n\n            {...register(\"address\")}\n            value={formData.address}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>City<span className=\"text-red-600\">{errors.city?.message}</span></label>\n            <input\n            type=\"text\"\n            name=\"city\"\n            placeholder={props.data.city}\n\n            {...register(\"city\")}\n            value={formData.city}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>State<span className=\"text-red-600\">{errors.state?.message}</span></label>\n            <input\n            type=\"text\"\n            name=\"state\"\n            placeholder={props.data.state}\n\n            {...register(\"state\")}\n            value={formData.state}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>Country<span className=\"text-red-600\">{errors.country?.message}</span></label>\n            <input\n            type=\"text\"\n            name=\"country\"\n            placeholder={props.data.country}\n\n            {...register(\"country\")}\n            value={formData.country}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n      \n        </form>\n    );\n    }\n    \n    export default EditProfileForm;\n    ","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAsyncError, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { backEndLink } from '../../utils/Links.js';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nconst EditprofileFormForUser = (props) => {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [isEmpty, setIsEmpty] = useState(false);\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        email: '',\n        phoneNumber: '',\n        name: '',\n        password:'',\n      \n    });\n    const [errorMessage, setErrorMessage] = useState('');\n    const [Submit, setSubmit] = useState(true);\n\n    const schema = yup.object().shape({\n        email: yup.string().email('Invalid email format'),\n        name:yup.string(),\n        password:yup.string(),\n\n\n    });\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n    useEffect(() => {\n        const isFormEmpty = Object.values(formData).every((value) => value === '');\n        setIsEmpty(isFormEmpty);\n    }, [formData]);\n   \n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = () => {\n        if (Submit) {\n            setIsSubmitting(true);\n            const token = localStorage.getItem('token')\n            formData.token = token\n            console.log(formData);\n            \n            axios\n            .post(`${backEndLink}/update`, formData)\n            .then((res) => {\n                const token = res.data.token;\n                console.log(res.data);\n                console.log(\"saved1\");\n                setIsSubmitting(false);\n                setSubmit(false);\n        setFormData({   email: '',\n                        phoneNumber: '',\n                        name: '',\n                        password:'',}); // Clear form fields\n                        window.location.reload()\n\n\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n\n                if (error.response && error.response.data && error.response.data.message) {\n                    setErrorMessage(error.response.data.message);\n                } else {\n                    setErrorMessage('An error occurred. Please try again.');\n                }\n                \n                setIsSubmitting(false);\n                setSubmit(false);\n\n            });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"grid gap-5 w-[]  \">\n        <button\n            type='submit'\n            disabled = {isEmpty||isSubmitting} \n            className={`h-[32px] w-[80px] bg-blue-500 flex items-center justify-center rounded-[0.6rem] font-bold text-white justify-self-end ${isEmpty ? 'bg-[rgb(226,232,240)]' : ''}`}\n          >\n            {isSubmitting?<span className=\"loading loading-spinner loading-sm bg-white\"></span>:'save'}\n         </button>\n        \n        <div className=\"text-black grid justify-items-start\">\n        <label>Name<span className=\"text-red-600\">{errors.name?.message}</span></label>\n        <input\n        type=\"text\"\n        name=\"name\"\n        placeholder={props.data.name}\n        \n        {...register(\"name\")}\n        value={formData.name}\n        onChange={handleChange}\n        className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n        />\n    </div>\n    \n\n        <div className=\"text-black grid justify-items-start\">\n            <label>Email ID<span className=\"text-red-600\">{errors.email?.message}</span></label>\n            <input\n            type=\"text\"\n            placeholder={props.data.email}\n            {...register(\"email\")}\n            value={formData.email}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n        <div className=\"text-black grid justify-items-start\">\n            <label>Password<span className=\"text-red-600\">{errors.email?.message}</span></label>\n            <input\n            type=\"password\"\n            placeholder={'.........'}\n            {...register(\"password\")}\n            value={formData.password}\n            onChange={handleChange}\n            className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n            />\n        </div>\n    \n\n        <div className=\"text-black grid justify-items-start\">\n            <label>Phone Number<span className=\"text-red-600\">{errors.phoneNumber?.message}</span></label>\n            <PhoneInput\n            placeholder={props.data.phoneNumber}\n\n            inputStyle={{\n                height: '45px',\n                width: '100%',\n                border: '1px solid #ccc',\n                borderRadius: '5px',\n            }}\n            value={formData.phoneNumber}\n            onChange={(value) => setFormData({ ...formData, phoneNumber: value })}\n            />\n        </div>\n    \n        </form>\n    );\n    }\n    \n    export default EditprofileFormForUser;\n    ","import { useEffect, useState } from 'react';\nimport EditProfileForm from '../../components/Forms/EditProfileForm.js'\nimport EditprofileFormForUser from '../../components/Forms/EditprofileFormForUser.js'\nimport { useSelector } from 'react-redux';\n\nconst Profile = () => {\n    const userInfo = useSelector((state) => state.user.value);\n    const [name,setName] = useState(\"\");\n    const [isLoading,setIsLoading] = useState(false)\n\n    useEffect(()=>{\n      setName(userInfo.info.name)\n    },[])\n\n  const nameParts = name.split(\" \");\n  const firstName = nameParts[0]; \n  const lastName = nameParts[nameParts.length - 1]; \n  const firstInitial = firstName.charAt(0); \n  const lastInitial = lastName.charAt(0); \n  \n\n  return (\n    <div className={`bg-white h-full w-full overflow-auto `}>\n      <div className = 'flex' >\n\n        <div className='p-[15px] grid gap-[6px] grow '>\n          <div className='p-[17px] w-[50%] max-md:w-[75%] h-[50px] bg-white rounded-[0.6rem] shadow-md flex items-center justify-between'>\n            <h1 className='text-[1.6rem]'>Profile Details</h1>\n\n          </div>\n          <div className='bg-white rounded-[0.6rem] w-[75%] shadow-md grid max-md:w-[100%]'>\n              <div className='flex gap-6 items-center p-[17px] rounded-[0.6rem] bg-white shadow-md'>\n                  <div className=\"avatar placeholder flex items-center  \">\n                  <div className=\" text-neutral-content bg-[#525d83] rounded-full w-[9rem] max-sm:w-[5rem] \">\n                      <span className=\"text-3xl\">{firstInitial}{lastInitial}</span>\n                  </div>\n                  </div> \n                  {!isLoading?\n                  <div className='grid gap-2 items-center justify-start'>\n                      <h1 className = ' max-sm:text-[0.8rem]'>{userInfo.info.email}</h1>\n                      <div><button className='border border-blue-600 text-blue-600 rounded-[0.3rem] p-1 '>Edit</button> <button className='border border-blue-600 text-blue-600 rounded-[0.3rem] p-1'>View Agreement</button></div>\n                  </div>:\n                <span className=\"loading loading-dots loading-lg bg-[#2f458d]\"></span>\n                  }\n              </div>\n              <div className= {userInfo.isCompany?`p-[17px]`:'hidden'}>\n                  <EditProfileForm data = {userInfo.info}  />\n              </div>\n              <div className= {!userInfo.isCompany?`p-[17px]`:'hidden'}>\n                  <EditprofileFormForUser data = {userInfo.info}  />\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n ","export const backEndLink = 'https://test-back-end-dszgwhplxa-el.a.run.app';\n// export const backEndLink ='http://localhost:8080';\n\n"],"names":["props","_errors$name","_errors$email","_errors$email2","_errors$phoneNumber","_errors$address","_errors$city","_errors$state","_errors$country","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","_useState3","_useState4","isEmpty","setIsEmpty","_useState5","useNavigate","name","email","phoneNumber","password","address","city","state","country","_useState6","formData","setFormData","_useState7","_useState8","setErrorMessage","_useState9","_useState10","Submit","setSubmit","schema","yup","shape","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","useEffect","isFormEmpty","Object","values","every","value","handleChange","e","_e$target","target","_objectSpread","_defineProperty","_jsxs","onSubmit","token","localStorage","getItem","console","log","axios","post","concat","backEndLink","then","res","data","window","location","reload","catch","error","response","message","className","children","_jsx","type","disabled","placeholder","onChange","PhoneInput","inputStyle","height","width","border","borderRadius","userInfo","useSelector","user","setName","isLoading","info","nameParts","split","firstName","lastName","length","firstInitial","charAt","lastInitial","isCompany","EditProfileForm","EditprofileFormForUser"],"sourceRoot":""}