{"version":3,"file":"static/js/625.84af8a84.chunk.js","mappings":"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","sources":["assets/plus.svg","assets/chevronRight.svg","assets/plusWhite.svg","components/Addmember&Search/AddMemberForm.js","components/tables/MembersTable.js","pages/members/Members.js","utils/Links.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 27,\n    height: 27,\n    fill: \"currentColor\",\n    className: \"bi bi-plus\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.7a855e84c72aed86d403cf4263758cf9.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-chevron-left\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevronRight.c80cdd8edb8ab6c8a1634e6d14e15383.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlusWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    fill: \"white\",\n    className: \"bi bi-plus\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusWhite);\nexport default __webpack_public_path__ + \"static/media/plusWhite.70746a12d79c266029e41c73e85d8183.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport chevronRight from \"../../assets/chevronRight.svg\"\nimport plusSvg from '../../assets/plusWhite.svg';\nimport axios from 'axios';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { backEndLink } from '../../utils/Links.js';\n\nconst Addmember = (props) => {\n    const [isEmpty, setIsEmpty] = useState(false)\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [formData, setFormData] = useState({ name: '', email: '' });\n    const [sentEmail, setSentEmail] = useState(false);\n\n    const schema = yup.object().shape({\n        name: yup.string().required('Name is required'),\n        email: yup.string().email('Invalid email format').required('Email is required'),\n    });\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(schema),\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n        setIsEmpty(formData.email == \"\"&&formData.name == \"\"?true:false)\n\n    };\n\n    const onSubmit = () => {\n        setIsSubmitting(true);\n\n        const token = localStorage.getItem(\"token\");\n        formData.token = token;\n        formData.compId = props.compId\n\n        axios.post(`${backEndLink}/adduser`, formData)\n            .then((res) => {\n                setSentEmail(true);\n                setIsSubmitting(false);\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.log(\"error\", error);\n                setIsSubmitting(false);\n            });\n    };\n\n    \n\n    return (\n        <div className=\" w-full max-w-[512px] rounded-md\" onClick={(e) => e.stopPropagation()}>\n            <div className=' flex gap-[15px] pl-[15px] items-center justify-center font-bold rounded-t-md'>\n               \n                <p>Add Team Member</p>\n            </div>\n            <form className='bg-white m-[15px] p-[15px] grid gap-10 rounded-md' onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"text-black grid justify-items-start\">\n                    <label>Enter name <span className=\"text-red-600\">* {errors.email?.message} </span><span className='text-green-600'>{sentEmail ? \"Invitation Email Sent\" : \"\"}</span></label>\n                    <input\n                        type=\"text\"\n                        {...register(\"name\")}\n                        value={formData.name}\n                        onChange={handleChange}\n                        className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n                    />\n                </div>\n\n                <div className=\"text-black grid justify-items-start\">\n                    <label>Enter Email <span className=\"text-red-600\">* {errors.email?.message} </span><span className='text-green-600'>{sentEmail ? \"Invitation Email Sent\" : \"\"}</span></label>\n                    <input\n                        type=\"text\"\n                        {...register(\"email\")}\n                        value={formData.email}\n                        onChange={handleChange}\n                        className=\"p-3 border h-11 max-w-96 w-full border-gray-400 rounded-md focus:outline-none focus:border-blue-500 bg-transparent\"\n                    />\n                </div>\n                \n                <button \n                    disabled = {isSubmitting}\n                className='font-bold text-xl text-white flex items-center justify-center h-[42px] bg-blue-500 rounded' type=\"submit\">\n                    {isSubmitting ? (\n                        <span className=\"loading loading-spinner loading-md\"></span>\n                    ) : (\n                        <>\n                            <img src={plusSvg} alt=\"Add Member\" />\n                            <p>Add Member</p>\n                        </>\n                    )}\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Addmember;\n","import React from 'react';\n\nconst MembersTable = (props) => {\n  return (\n    <div className='bg-[#E1EBFF] rounded-xl shadow-md p-1'>\n      <div className=\"h-[28rem] overflow-y-auto\">\n        <table className=\"table\">\n          {/* Head */}\n          <thead>\n            <tr>\n              <th>\n                <label>\n                  <input type=\"checkbox\" className=\"checkbox\" />\n                </label>\n              </th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.isArray(props.users) && props.users.length > 0 ? (\n              props.users.map((user, index) => (\n                /* Row */\n                <tr key={index}>\n                  <th>\n                    <label>\n                      <input type=\"checkbox\" className=\"checkbox\" />\n                    </label>\n                  </th>\n                  <td>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"avatar\">\n                        <div className=\"avatar placeholder\">\n                          <div className=\"bg-neutral text-neutral-content rounded-full w-12\">\n                            {/* Replace 'MX' with user's avatar or initials */}\n                            <span>{user.name ? user.name.slice(0, 2).toUpperCase() : 'XX'}</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-bold\">\n                          {user.name}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    {user.email}\n                    <br />\n                  </td>\n                  <td>\n                    {user.role}\n                  </td>\n                  <th>\n                    <button className=\"btn btn-ghost btn-xs\">Details</button>\n                  </th>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"5\">No users available</td>\n              </tr>\n            )}\n          </tbody>\n\n          {/* Foot */}\n          <tfoot>\n            <tr>\n              <th></th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th></th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default MembersTable;\n","import plusSvg from '../../assets/plus.svg';\nimport Addmember from '../../components/Addmember&Search/AddMemberForm.js';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { backEndLink } from '../../utils/Links.js';\nimport MembersTable from '../../components/tables/MembersTable.js';\n\nconst Front = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const userInfo = useSelector((state) => state.user.value);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      try {\n        \n          axios.get(`${backEndLink}/RetrieveAllUsers?token=${token}`)\n        \n\n          .then((allUsers) => {\n            setIsLoading(false);\n \n            setUsers(allUsers.data.users !== undefined ? allUsers.data.users : []);\n\n       \n          })\n          .catch((error) => {\n            navigate('/login');\n            console.error('Error:', error);\n            setIsLoading(false);\n          });\n      } catch (e) {\n        console.error(e);\n        navigate('/login');\n        setIsLoading(false);\n      }\n    }\n  }, [navigate]);\n\n  return (\n    <>\n      <div className='flex flex-col bg-white w-[100%] h-full items-center justify-center '>\n        {!isLoading ? (\n          <div className='w-full p-[10px] pl-[2rem] pr-[2rem] grid gap-5 '>\n            <div className={userInfo.haveAccess ? ` bg-white h-full m-full max-h-[52px] max-m-[15px]  rounded-md flex justify-between p-[10px] ` : `hidden`}>\n              <div className='text-[34px]'>\n                <h1>Members</h1>\n              </div>\n              <label\n                htmlFor=\"my_modal_6\"\n                className='flex items-center cursor-pointer gap-2 rounded-md hover:bg-[#E1EBFF] p-[8px]'\n              >\n                <img src={plusSvg} alt=\"Plus Icon\" />\n                <p>Add Member</p>\n              </label>\n            </div>\n            <MembersTable users={users} />\n\n            <input type=\"checkbox\" id=\"my_modal_6\" className=\"modal-toggle\" />\n            <div className=\"modal \" role=\"dialog\">\n              <div className=\"modal-box\">\n                <Addmember compId={userInfo.compId} />\n                <div className=\"modal-action\">\n                  <label htmlFor=\"my_modal_6\" className=\"btn\">\n                    Close!\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <span className=\"loading loading-ring loading-lg\"></span>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Front;\n","export const backEndLink = 'https://test-back-end-dszgwhplxa-el.a.run.app';\n// export const backEndLink ='http://localhost:8080';\n\n"],"names":["props","_errors$email","_errors$email2","_useState","useState","_useState2","_slicedToArray","setIsEmpty","_useState3","_useState4","isSubmitting","setIsSubmitting","_useState5","name","email","_useState6","formData","setFormData","_useState7","_useState8","sentEmail","setSentEmail","schema","yup","shape","required","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","_jsxs","className","onClick","stopPropagation","children","_jsx","onSubmit","token","localStorage","getItem","compId","axios","post","concat","backEndLink","then","res","window","location","reload","catch","error","console","log","message","type","onChange","disabled","_Fragment","src","plusSvg","alt","Array","isArray","users","length","map","user","index","slice","toUpperCase","role","colSpan","navigate","useNavigate","isLoading","setIsLoading","setUsers","userInfo","useSelector","state","useEffect","get","allUsers","undefined","data","haveAccess","htmlFor","MembersTable","id","Addmember"],"sourceRoot":""}